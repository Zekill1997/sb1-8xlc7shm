const { databaseService } = require('../services/databaseService');

// Script pour mettre √† jour la commune d'un utilisateur
async function updateUserCommune(userEmail, commune, isEncadreur) {
  try {
    console.log(`üîÑ Mise √† jour de la commune pour l'utilisateur ${userEmail}...`);
    
    // R√©cup√©rer tous les utilisateurs
    const allUsers = await databaseService.getAllUsers();
    
    // Trouver l'utilisateur par email
    const user = allUsers.find(u => u.email === userEmail);
    
    if (!user) {
      console.error(`‚ùå Utilisateur non trouv√© avec l'email: ${userEmail}`);
      return;
    }
    
    // V√©rifier le r√¥le
    if (isEncadreur && user.role !== 'ENCADREUR') {
      console.error(`‚ùå L'utilisateur ${userEmail} n'est pas un encadreur`);
      return;
    }
    
    if (!isEncadreur && user.role !== 'PARENT_ELEVE') {
      console.error(`‚ùå L'utilisateur ${userEmail} n'est pas un parent/√©l√®ve`);
      return;
    }
    
    // Pr√©parer les donn√©es √† mettre √† jour
    const updateData = isEncadreur 
      ? { communeIntervention: commune }
      : { communeApprenant: commune };
    
    // Afficher les informations actuelles
    const currentCommune = isEncadreur 
      ? user.communeIntervention 
      : user.communeApprenant;
    
    console.log(`   - Utilisateur: ${user.email}`);
    console.log(`   - R√¥le: ${user.role}`);
    console.log(`   - Commune actuelle: ${currentCommune || 'NON D√âFINIE'}`);
    console.log(`   - Nouvelle commune: ${commune}`);
    
    // Mettre √† jour l'utilisateur
    const result = await databaseService.updateUser(user.id, updateData);
    
    if (result.success) {
      console.log('‚úÖ Commune mise √† jour avec succ√®s!');
    } else {
      console.error(`‚ùå Erreur lors de la mise √† jour: ${result.error}`);
    }
  } catch (error) {
    console.error('‚ùå ERREUR LORS DE LA MISE √Ä JOUR:', error);
  }
}

// Exemples d'utilisation:
// Pour mettre √† jour la commune d'un encadreur:
// updateUserCommune('encadreur@example.com', 'Cocody', true);

// Pour mettre √† jour la commune d'un parent/√©l√®ve:
// updateUserCommune('parent@example.com', 'Cocody', false);

// Exporter la fonction pour pouvoir l'utiliser ailleurs
module.exports = { updateUserCommune };